{"version":3,"sources":["PageNavLink.tsx","MainNav.tsx","Tabs.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","Tabs","tabs","useState","selectedTab","setSelectedTab","tabId","useParams","navigate","useNavigate","useEffect","some","tab","id","tabContent","find","content","map","onClick","onTabClick","title","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"uPASaA,EAA0C,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACrD,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAAW,eAAgB,CACtD,YAAaD,KAHjB,SAMGF,KCdQI,EAAU,kBAErB,aADA,CACA,OACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,QAAQC,KAAK,iB,OCFxBK,EAA4B,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KAC1C,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAMQC,EAAUC,cAAVD,MACFE,EAAWC,cAEjBC,qBAAU,WACJJ,IAAUJ,EAAKS,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOP,MAC1CE,EAAS,YAEV,CAACF,EAAOJ,EAAMM,IAEjBE,qBAAU,WACRL,EAAeC,KACd,CAACA,IAEJ,IAAMQ,EAAaV,EAAW,UAC1BF,EAAKa,MAAK,SAACH,GAAD,OAASA,EAAIC,KAAOT,YADJ,aAC1B,EAA4CY,QAC5C,sBAEJ,OACE,qCACE,qBAAKnB,UAAU,gBAAf,SAEE,6BACGK,EAAKe,KAAI,SAACL,GAAD,OACR,oBACE,UAAQ,MAERf,UAAWE,IAAW,GAAI,CACxB,YAAaa,EAAIC,KAAOT,IAJ5B,SAOE,cAAC,IAAD,CACET,GAAIS,IAAgBQ,EAAIC,GAAK,KAAzB,gBAAyCD,EAAIC,IACjDK,QAAS,kBApCJ,SAACZ,GAClBD,EAAeC,GAmCYa,CAAWP,EAAIC,KAFhC,SAIGD,EAAIQ,SATFR,EAAIC,WAmBb,qBAAKhB,UAAU,QAAQ,UAAQ,aAA/B,SACGiB,QCtDPZ,EAAO,CACX,CAAEW,GAAI,QAASO,MAAO,QAASJ,QAAS,eACxC,CAAEH,GAAI,QAASO,MAAO,QAASJ,QAAS,eACxC,CAAEH,GAAI,QAASO,MAAO,QAASJ,QAAS,gBAG7BK,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKxB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOyB,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOA,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAU5B,GAAG,SAAS6B,SAAO,MACtD,cAAC,IAAD,CAAOC,OAAK,EAACF,QAAS,cAAC,EAAD,CAAMrB,KAAMA,MAClC,cAAC,IAAD,CAAOoB,KAAK,SAASC,QAAS,cAAC,EAAD,CAAMrB,KAAMA,SAG5C,cAAC,IAAD,CAAOoB,KAAK,IAAIC,QAAS,oBAAI1B,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOyB,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU5B,GAAG,IAAI6B,SAAO,MAEpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,4DCzBnCG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6a02695e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface PageNavLinkProps {\n  to: string,\n  text: string,\n}\n\nexport const PageNavLink: React.FC<PageNavLinkProps> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item ', {\n      'is-active': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => (\n  /* Also requires <html class=\"has-navbar-fixed-top\"> */\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { Tab } from './types/Tab';\n\ninterface TabsProps {\n  tabs: Tab[];\n}\n\nexport const Tabs: React.FC<TabsProps> = ({ tabs }) => {\n  const [selectedTab, setSelectedTab] = useState<string>();\n\n  const onTabClick = (tabId: string) => {\n    setSelectedTab(tabId);\n  };\n\n  const { tabId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (tabId && !tabs.some((tab) => tab.id === tabId)) {\n      navigate('/tabs/');\n    }\n  }, [tabId, tabs, navigate]);\n\n  useEffect(() => {\n    setSelectedTab(tabId);\n  }, [tabId]);\n\n  const tabContent = selectedTab\n    ? tabs.find((tab) => tab.id === selectedTab)?.content\n    : 'Please select a tab';\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames('', {\n                'is-active': tab.id === selectedTab,\n              })}\n            >\n              <Link\n                to={selectedTab === tab.id ? '#/' : `/tabs/${tab.id}`} // issue was with relative links instead of absolute ones\n                onClick={() => onTabClick(tab.id)}\n              >\n                {tab.title}\n              </Link>\n            </li>\n\n          ))}\n        </ul>\n      </div>\n\n      {selectedTab\n        ? (\n          <div className=\"block\" data-cy=\"TabContent\">\n            {tabContent}\n          </div>\n        )\n        : (\n          <div className=\"block\" data-cy=\"TabContent\">\n            {tabContent}\n          </div>\n        )}\n\n    </>\n\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { MainNav } from './MainNav';\nimport { Tabs } from './Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => (\n  <>\n    <MainNav />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"tabs\">\n            <Route path=\"*\" element={<Navigate to=\"/tabs/\" replace />} />\n            <Route index element={<Tabs tabs={tabs} />} />\n            <Route path=\":tabId\" element={<Tabs tabs={tabs} />} />\n          </Route>\n\n          <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"*\" element={<p>page not found</p>} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}